<?php

use Drupal\Core\Url;
use Drupal\facets\FacetInterface;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_menu_links_discovered_alter().
 *
 * Workaround for taxonomy_menu not supporting custom paths. See #2865894.
 *
 * Repris du module commerce_demo : https://www.drupal.org/project/commerce_demo
 */
function akiko_menu_links_discovered_alter(&$links) {
  $alias_cleaner = \Drupal::service('pathauto.alias_cleaner');
  $facet_storage = \Drupal::entityTypeManager()->getStorage('facets_facet');
  $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  try {
    $view_url = Url::fromRoute('view.product_catalog.page_1');
    $view_url = $view_url->getInternalPath();
  } catch (RouteNotFoundException $e) {
    // The catalog View may have been disabled or deleted.
    return;
  }

  foreach ($links as &$link) {
    $menu_name = isset($link['menu_name']) ? $link['menu_name'] : '';
    if ($link['provider'] == 'taxonomy_menu' && $menu_name == 'catalog') {
      // Generate the path to the view + facets.
      // Assumes that the facet is named the same as the vocabulary.
      $term = $term_storage->load($link['metadata']['taxonomy_term_id']);
      $facet = $facet_storage->load($term->bundle());
      if (!$facet instanceof FacetInterface) {
        continue;
      }

      // It is possible for the facet to be NULL if it was deleted, in which
      // case we only link to the view (which is better than nothing).
      $link['url'] = 'internal:/' . $view_url;
      if ($facet) {
        $label = $alias_cleaner->cleanString($term->label());
        $link['url'] .= '/' . $facet->getUrlAlias() . '/' . $label . '-' . $term->id();
      }
      $link['route_name'] = '';
      $link['route_parameters'] = [];
      $link['load arguments'] = [];
    }
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 *
 * Repris du module commerce_demo : https://www.drupal.org/project/commerce_demo
 */
function akiko_preprocess_breadcrumb(&$variables) {
  // The Bootstrap theme provides a feature that appends the current page title
  // to the end of the breadcrumbs. On the catalog page this is awkward, as
  // Facets already appends the facet source page title when a facet filter
  // is active.
  //
  // This temporarily disables that setting, as module preprocess hooks will run
  // before the theme's, without actually changing the theme setting.
  if (class_exists('\Drupal\bootstrap\Plugin\Preprocess\Breadcrumb')) {
    $current_route_match = \Drupal::routeMatch();
    if ($current_route_match->getRouteName() == 'view.product_catalog.page_1') {
      $theme = \Drupal\bootstrap\Bootstrap::getTheme();
      $theme->setSetting('breadcrumb_title', FALSE);
    }
  }
}

//function akiko_form_commerce_checkout_flow_multistep_default_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//  dpm($form['actions']['next']['#value']);
//
//}

function akiko_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'order_data_export') {
    foreach ($view->result as $key=>$item) {
      $view->result[$key]->commerce_order_item_quantity = intval($item->commerce_order_item_quantity);
      $view->result[$key]->commerce_product_field_data_commerce_product_variation_field = 
      $view->result[$key]->commerce_order_item_quantity * $item->commerce_product_field_data_commerce_product_variation_field;
    }
  }
}

function akiko_bulk_creator_sku_alter(&$sku, $settings, $variation) {
  //~ //dpm($sku);
  //~ //dpm($settings);
  //~ //dpm($variation);
  //~ //dpm($variation->getTitle());
}

function akiko_commerce_bulk_variation_alter(array &$variations, $data = '', $product_type = '') {
  if ($product_type == 'accessory' || $product_type == 'clothing') {
    foreach ($variations as $variation) {
      $title = $variation->getTitle();
      $product = $variation->getProduct();
      $categories = $product->get('field_product_category')->getValue();
      $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($categories[1]['target_id']);
      $name = $term->name->value;
      
      $processed_title = str_replace(' - ', '-' . $name . '-', $title);
      $processed_title = str_replace(', ', '-', $processed_title);
      $sku = strtolower($processed_title);
        
      $variation->get('sku')->setValue($sku);
      $variation->save();
    }
  }
}
